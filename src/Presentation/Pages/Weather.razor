@page "/weather"
@inject HttpClient Http

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <FluentTable>
        <FluentTableHead>
            <FluentTableRow>
                <FluentTableHeaderCell>Date</FluentTableHeaderCell>
                <FluentTableHeaderCell aria-label="Temperature in Celsius">Temp. (C)</FluentTableHeaderCell>
                <FluentTableHeaderCell aria-label="Temperature in Farenheit">Temp. (F)</FluentTableHeaderCell>
                <FluentTableHeaderCell>Summary</FluentTableHeaderCell>
            </FluentTableRow>
        </FluentTableHead>
        <FluentTableBody>
            @foreach (var forecast in forecasts)
            {
                <FluentTableRow>
                    <FluentTableCell>@forecast.Date.ToShortDateString()</FluentTableCell>
                    <FluentTableCell>@forecast.TemperatureC</FluentTableCell>
                    <FluentTableCell>@forecast.TemperatureF</FluentTableCell>
                    <FluentTableCell>@forecast.Summary</FluentTableCell>
                </FluentTableRow>
            }
        </FluentTableBody>
    </FluentTable>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
